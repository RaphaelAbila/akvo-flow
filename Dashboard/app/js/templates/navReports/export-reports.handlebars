<section class="fullWidth reportTools" id="reportBlocks">
  {{#view FLOW.ExportReportsAppletView}}
    <div class="surveySelect">
      <nav class="breadCrumb floats-in">
        {{#unless FLOW.projectControl.isLoading}}
          {{view FLOW.SurveySelectionView}}
        {{/unless}}
        {{#if FLOW.selectedControl.selectedSurvey}}
          {{view Ember.Select
              contentBinding="FLOW.surveyControl.arrangedContent"
              selectionBinding="FLOW.selectedControl.selectedSurvey"
              optionLabelPath="content.code"
              optionValuePath="content.keyId"
              prompt=""
              promptBinding="Ember.STRINGS._select_form" id="monitorSelection"}}
        {{/if}}
      </nav>
    </div>
    <section class="exportContainer">
      <ul class="exportSelect">
        <li class="dataCleanExp trigger" onclick="openExportOptions(event, 'dataCleanExp_options')">
          <h2>{{t _data_cleaning_export}}</h2>
          <h6>{{t _importable_back_to_akvo_flow}}</h6>
          <p class="expDescr">{{t _combines_options}}</p>
          <div id="dataCleanExp_options" class="options">
              <div class="dataCollectedDate">
                <p>{{view Ember.RadioButton selectionBinding="FLOW.ReportLoader.cleaningExportOption" value="range" name="cleaning-export-option"}}{{t _collection_period}}</p>
                {{#if view.cleaningDateRangeSelected}}
                <label class="collectedFrom">
                  {{view FLOW.DateField2 valueBinding="view.reportFromDate" class="from_date" placeholder="" placeholderBinding="Ember.STRINGS._collected_from" size=30}}
                </label>
                <label class="collectedTo">
                  {{view FLOW.DateField2 valueBinding="view.reportToDate" class="to_date" placeholder="" placeholderBinding="Ember.STRINGS._to" size=30}}
                </label>
                {{/if}}
              </div>
              {{#if view.showLastCollection}}
              <div class="dataCollectedDate"  style="background-color: transparent;">
              {{view Ember.RadioButton selectionBinding="FLOW.ReportLoader.cleaningExportOption" value="recent" name="cleaning-export-option"}}{{t _only_recent_submissions}}
              </div>
              {{/if}}
            <a {{action showDataCleaningReport target="this"}} class="button trigger2">{{t _download}}</a>
          </div>
        </li>
        <li class="dataAnalyseExp trigger" onclick="openExportOptions(event, 'dataAnalyseExp_options')">
          <h2>{{t _data_analysis_export}}</h2>
          <h6>{{t _not_importable_back}}</h6>
          <p class="expDescr">{{t _replaces_question}}</p>
            <div id="dataAnalyseExp_options" class="options">
              <div class="dataCollectedDate">
                <p>{{view Ember.RadioButton selectionBinding="FLOW.ReportLoader.analysisExportOption" value="range" name="analysis-export-option"}}{{t _collection_period}}</p>
                {{#if view.analysisDateRangeSelected}}
                <label class="collectedFrom">
                   {{view FLOW.DateField2 minDate=false valueBinding="view.reportFromDate" class="from_date" placeholder="" placeholderBinding="Ember.STRINGS._collected_from" size=30}}
                </label>
                <label class="collectedTo">
                  {{view FLOW.DateField2 minDate=false valueBinding="view.reportToDate" class="to_date" placeholder="" placeholderBinding="Ember.STRINGS._to" size=30}}
                </label>
                {{/if}}
              </div>
              {{#if view.showLastCollection}}
              <div class="dataCollectedDate"  style="background-color: transparent;">
                {{view Ember.RadioButton selectionBinding="FLOW.ReportLoader.analysisExportOption" value="recent" name="analysis-export-option"}}{{t _only_recent_submissions}}
              </div>
              {{/if}}
              <a {{action showDataAnalysisReport target="this"}} class="button trigger2">{{t _download}}</a>
            </div>
          </li>
          <li class="compReportExp trigger"  onclick="openExportOptions(event, 'compReportExp_options')">
            <h2>{{t _comprehensive_report}}</h2>
            <h6>{{t _not_importable_back}}</h6>
            <p class="expDescr">{{t _summarizes_responses}}</p>
            <div id="compReportExp_options" class="options">
              <a {{action showComprehensiveReport target="this"}} class="button trigger2">{{t _download}}</a>
            </div>
          </li>
          <li class="geoShapeDataExp trigger"  onclick="openExportOptions(event, 'geoShapeDataExp_options')">
            <h2>{{t _geoshape_data}}</h2>
            <p class="expDescr">{{t _geojson}}</p>
              <div class="geoshapeSelect">
              {{#if FLOW.selectedControl.selectedSurvey}}
                {{view Ember.Select
                    contentBinding="FLOW.questionControl.geoshapeContent"
                    selectionBinding="FLOW.selectedControl.selectedQuestion"
                    optionLabelPath="content.text"
                    optionValuePath="content.keyId"
                    prompt=""
                    promptBinding="Ember.STRINGS._select_question"}}
              {{/if}}
            </div>
            <div id="geoShapeDataExp_options" class="options">
              <a {{action showGeoshapeReport target="this"}} class="button trigger2">{{t _download}}</a>
            </div>
        </li>
        <li class="surveyFormExp trigger"  onclick="openExportOptions(event, 'surveyFormExp_options')">
          <h2>{{t _survey_form}}</h2>
          <p class="expDescr">{{t _printable}}</p>
          <div id="surveyFormExp_options" class="options">
            <a {{action showSurveyForm target="this"}} class="button trigger2">{{t _download}}</a>
              {{#if view.showSurveyFormApplet }}
                {{view FLOW.surveyFormApplet}}
              {{/if}}
          </div>
      </li>
    </ul>
  </section>
  {{/view}}
  <script type="text/javascript">
    function openExportOptions(evt, exportName) {
      var i, options, trigger;
      options = document.getElementsByClassName("options");
      for (i = 0; i < options.length; i++) {
        options[i].style.display = "none";
      }
      trigger = document.getElementsByClassName("trigger");
      for (i = 0; i < trigger.length; i++) {
        trigger[i].className = trigger[i].className.replace(" active", "");
      }
      document.getElementById(exportName).style.display = "block";
      evt.currentTarget.className += " active";

      //by default select the range option
      if (exportName == "dataCleanExp_options") {
        if ($('input:radio[name=cleaning-export-option]').is(':checked') === false) {
          $('input:radio[name=cleaning-export-option]').filter('[value=range]').prop('checked', true);
        }
      } else if (exportName == "dataAnalyseExp_options") {
        if ($('input:radio[name=analysis-export-option]').is(':checked') === false) {
          $('input:radio[name=analysis-export-option]').filter('[value=range]').prop('checked', true);
        }
      }
     }
  </script>
</section>
