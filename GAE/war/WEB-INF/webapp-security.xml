<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:b="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <http pattern="/admin/js/**" security="none" />
    <http pattern="/admin/images/**" security="none" />
    <http pattern="/admin/css/**" security="none" />
    <http pattern="/vendorjs/js/**" security="none" />
    <http pattern="/publicmap/images/**" security="none" />
    <http pattern="/publicmap/css/**" security="none" />
    <http pattern="/publicmap/js/**" security="none" />

    <http use-expressions="true" entry-point-ref="keycloakAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager">
        <custom-filter ref="keycloakPreAuthActionsFilter" before="LOGOUT_FILTER" />
        <custom-filter ref="keycloakAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER" />
        <intercept-url pattern="/remote_api**" access="permitAll"/>
        <intercept-url pattern="/admin/logout.html" access="permitAll"/>
        <intercept-url pattern="/rest/placemark**" method="GET" access="permitAll"/>
        <intercept-url pattern="/_ah/**" access="permitAll"/>
        <intercept-url pattern="/webapp/testharness**" access="hasRole('SUPER_ADMIN')"/>
        <intercept-url pattern="/dashboard.html" access="hasRole('SUPER_ADMIN')"/>
        <intercept-url pattern="/rest/reports/**" method="PUT" access="permitAll"/>
        <intercept-url pattern="/rest/users" access="hasRole('USER')"/>
        <intercept-url pattern="/rest/user_roles" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/rest/user_auth" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/rest/**" access="hasRole('USER')"/>
        <intercept-url pattern="/admin/**" access="hasRole('USER')"/>
        <intercept-url pattern="/**" access="permitAll"/>
        <custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
    </http>

    <b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<b:property name="decisionVoters">
			<b:list>
				<b:bean class="org.waterforpeople.mapping.app.web.rest.security.RequestUriVoter" />
				<b:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</b:list>
		</b:property>
	</b:bean>

	<!-- GAE Authentication

    <b:bean id="gaeEntryPoint" class="org.waterforpeople.mapping.app.web.rest.security.GoogleAccountsAuthenticationEntryPoint" />

    <b:bean id="gaeFilter" class="org.waterforpeople.mapping.app.web.rest.security.GaeAuthenticationFilter">
        <b:property name="authenticationManager" ref="authenticationManager"/>
        <b:property name="failureHandler">
            <b:bean class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
                <b:property name="exceptionMappings">
                    <b:map>
                        <b:entry key="org.springframework.security.authentication.DisabledException" value="/disabled.htm" />
                    </b:map>
                </b:property>
            </b:bean>
        </b:property>
    </b:bean>

    <authentication-manager id="authenticationManager">
        <authentication-provider ref="gaeAuthenticationProvider"/>
    </authentication-manager>

    <b:bean id="gaeAuthenticationProvider" class="org.waterforpeople.mapping.app.web.rest.security.GoogleAccountsAuthenticationProvider" />
-->

    <!-- Keycloak -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="keycloakAuthenticationProvider" />
    </authentication-manager>

    <b:bean id="adapterDeploymentContext" class="org.keycloak.adapters.springsecurity.AdapterDeploymentContextFactoryBean">
        <b:constructor-arg value="/WEB-INF/keycloak.json" />
    </b:bean>

    <b:bean id="keycloakAuthenticationEntryPoint" class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationEntryPoint">
        <b:constructor-arg name="adapterDeploymentContext" ref="adapterDeploymentContext" />
    </b:bean>
    <b:bean id="keycloakAuthenticationProvider" class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationProvider" />
    <b:bean id="keycloakPreAuthActionsFilter" class="org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter"/>
    <b:bean id="keycloakAuthenticationProcessingFilter" class="org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter">
        <b:constructor-arg name="authenticationManager" ref="authenticationManager" />
    </b:bean>

    <b:bean id="keycloakLogoutHandler" class="org.keycloak.adapters.springsecurity.authentication.KeycloakLogoutHandler">
        <b:constructor-arg ref="adapterDeploymentContext" />
    </b:bean>

    <b:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <b:constructor-arg name="logoutSuccessUrl" value="/" />
        <b:constructor-arg name="handlers">
            <b:list>
                <b:ref bean="keycloakLogoutHandler" />
                <b:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
            </b:list>
        </b:constructor-arg>
        <b:property name="logoutRequestMatcher">
            <b:bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                <b:constructor-arg name="pattern" value="/sso/logout**" />
                <b:constructor-arg name="httpMethod" value="GET" />
            </b:bean>
        </b:property>
    </b:bean>
</b:beans>
